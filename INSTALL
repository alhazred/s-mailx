I n s t a l l i n g  S - n a i l
================================

1. Compilation
2. Notes for S-nail(1) v14.7*
3. Current codebase state

1. Compilation
--------------

System specific notes can be found in the next section.
Any (optional) feature is adjustable and documented in `conf.rc'.
Adjustments may also take place, and are usually done, from the command
line, overriding those made in `conf.rc' (if any):

  $ [make &&] make install
  $ make uninstall          # Won't remove the system wide startup file!
  $ make distclean          # *Completely* cleanup working directory

With adjustments:

  $ make WANT_IMAP=0 install
  $ make WANT_NCL=0 PREFIX=/some/nasty/prefix install

There are also some predefined restricted configuration sets available,
which take precedence over anything else:

. CONFIG=MINIMAL
  little is left but some air to breathe; no internet connectivity, no
  internationalized domain names, no IMAP-searches, no regular
  expression searches, no command line editor, no documentation strings.

. CONFIG=MEDIUM
  Like MINIMAL, but with documentation strings, and the regular
  expression searches as well as the builtin command line editor will be
  included if that is possible.

. CONFIG=NETSEND
  WANT_SMTP and WANT_SSL settings are enabled, internationalized domain
  names will be supported if the necessary libraries are available,
  otherwise identical to MEDIUM.

. CONFIG=MAXIMAL
  Anything on.

E.g.:

  $ make CONFIG=MINIMAL DESTDIR=xtest install

would create a `s-nail' binary and install a `s-nail' manual etc.
under the prefix `/usr/local' but rooted under [./]`xtest', i.e., the
binary would be installed as `[./]xtest/usr/local/bin/s-nail'.
The following make(1) target exists, and note that you can use
a VERBOSE=1 command line option to gain more (or a different kind of)
verbosity:

. all         Create / check and update configuration, build.
. install     Create / check and update configuration, build, install.
. clean       Remove anything which can be rebuild.
. distclean   Remove anything which can be rebuild or reconfigured.
. uninstall   Uninstall (if configured).

. config      Only create or check and update the configuration.
. build       Only build (using the existing configuration).
. test        Run ./cc-test.sh in --check-only mode on the built binary.
. packager-install
              Only install using the built files of the existing
              configuration.  It is possible to overwrite DESTDIR= when
              using this target nonetheless (a following `uninstall'
              won't know about that overwritten value, however).

If some libraries are missing that you know are installed on your
system, or if other errors occur due to missing files but which you know
exist, please ensure that the environment variable `C_INCLUDE_PATH'
includes the necessary `include/' paths and the environment variable
`LD_LIBRARY_PATH' includes the necessary `lib/'rary paths.

The S-nail make system will inspect these two environment variables and
*automatically* convert them to cc(1) (c99(1)) -I and -L options (since
these environment variables are, different to the command line options,
not part of the POSIX standard).
To set these environment variables, the following can be done in
a Bourne/Korn/POSIX compatible shell:

  $ C_INCLUDE_PATH="${C_INCLUDE_PATH}:/usr/local/include"
  $ LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
  $ export C_INCLUDE_PATH LD_LIBRARY_PATH
  $ make install

The S-nail make system will also automatically integrate pkgsrc(7) paths
into this mechanism.  pkgsrc(7) is used to handle building (compilation),
installation and removal of software packages on a lot of operating
systems, including all BSD systems, Linux, Solaris ...

2. Notes for S-nail(1) v14.7*
-----------------------------

Note first that MAILSPOOL is by default `/var/mail' (see `conf.rc').
Running `make test' should succeed always and everywhere.

S-nail(1) has been or is used regulary on these systems (`uname -srm').
Also, i'm (compile) testing manually with WANT_AUTOCC=1, WANT_DEBUG=[01]
and WANT_AMALGAMATION=[01] (and WANT_GSSAPI=1), which is what is
reflected by the following statements.

. All with WANT_AMALGAMATION=1:
  - Dependent on the configuration you may see some warnings about
    unused functions.  This shouldn't happen for a any of the predefined
    CONFIG= urations, including the one that results from the default
    settings of `conf.rc', but it may temporarily happen as long as the
    codebase is in that heavy fluctuation state.  Reports are welcome to
    vanish them until v20.

. All 32-bit systems:
  - There _may_ be warnings about format strings, like, e.g.,

      auxlily.c:1610:10: warning: format '%lu' expects type 'long
      unsigned int', but argument 3 has type 'size_t'

    This is ugly, but it has been decided to keep the S-nail codebase
    ISO C89 compatible, so that there is no %z format string modifier.
    However, `nail.h' tries hard to detect the real type sizes and ends
    up in a way that should ensure that the actually expected datatype
    is of the same size in reality -- please see the definition of the
    `ZFMT' macro in `nail.h' to verify this statement is true.
    It is also compile-time asserted via __ZFMT_CTA(), in main.c.

. Mac OS X <https://www.apple.com/>
  (Snow Leopard) Darwin 10.8.0 i386
  - gcc-mp-4.8 (MacPorts gcc48 4.8.2_0) 4.8.2.
    + Two warnings on 'signed overflow': the '_match_at()' one is to be
      inspected (CONFIG=MINIMAL WANT_AMALGAMATION=1).
  - clang version 3.4 (branches/release_34 197314)
    Target: x86_64-apple-darwin10.8.0
    Thread model: posix.
  - i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5666)
    (dot 3).
  - Apple clang version 1.7 (tags/Apple/clang-77) (based on LLVM
    2.9svn).

. ArchLinux <https://www.archlinux.org/>
  Linux 3.14.2-1-ARCH x86_64
  - gcc (GCC) 4.9.0
    + `devel'opment target: warnings on unused results, just ignore (for
      now).
    + I think faulty message on longjmp() clobbering on a const variable?

. CRUX Linux <http://www.crux.nu/>
  CRUX 3.1 (rc1) Linux 3.12.17 x86_64.
  - gcc (CRUX) 4.8.2.
    + Two warnings on 'signed overflow': the '_match_at()' one is to be
      inspected (CONFIG=MINIMAL WANT_AMALGAMATION=1).
    + `devel'opment target: warnings on unused results, just ignore
      (for now).
    + (The HOT BEVERAGE error doesn't occur, even today.)

  Linux 3.6.11 #1 SMP Sun Sep 15 17:47:31 UTC 2013 x86_64.
  - gcc (CRUX-x86_64-multilib) 4.7.2.
    + For rememberance:
      In a very special test mailbox the character `â˜•' (U+2615 HOT
      BEVERAGE) is displayed as `[3m<98><95>' (`set PAGER='cat -vet''
      prints `M-bM-^XM-^U').  Because this is the only system i have
      seen this, and only in this single mailbox, i suspect a problem
      in the character conversion environment.  (I hope v14.888888888ngs
      sole usage of mbrtowc(3) instead of mbtowc(3) and per-message
      multibyte states.  Let's see if that fixes this problem.  I'll
      keep the VM around.)

. NetBSD <https://www.netbsd.org/>
  NetBSD 6.99.40 i386 (201404092030Z)
  - gcc (NetBSD nb2 20140304) 4.8.3
    + Warnings on format strings -- as above.
    + Faulty message on longjmp() clobbering (on a const variable).

  NetBSD 6.99.24 NetBSD 6.99.24 (GENERIC) #0: Tue Oct 29 08:23:21 UTC
  2013 amd64.
  - gcc (NetBSD nb1 20120916) 4.5.4.
    + Faulty message on longjmp() clobbering (on a const variable).

. FreeBSD <https://www.freebsd.org/>
  FreeBSD 10.0-RELEASE amd64
  - FreeBSD clang version 3.3 (tags/RELEASE_33/final 183502) 20130610
    Target: x86_64-unknown-freebsd10.0
    Thread model: posix

. Void Linux <http://www.voidlinux.eu/>
  Linux 3.10.19_1 i686.
  - gcc (GCC) 4.7.3.
    + A single warning on 'signed overflow'.
    + `devel'opment target: warnings on unused results, just ignore (for
      now).
    + `devel'opment target: warnings on format strings -- as above.

. OpenBSD <http://www.openbsd.org/>
  OpenBSD 5.6 (current as of 2014-05-25) i386,
  OpenBSD 5.4 i386.
  - gcc (GCC) 4.2.1 20070719.
    + Faulty message on longjmp() clobbering (on a const variable).
    + Warning on usage of strcat(3) in smime_split() (to be addressed
      for real (i.e., without loosing S/MIME support) in next minor).

. DragonFly BSD <https://www.dragonflybsd.org/>
  DragonFly 3.6-RELEASE x86_64
  - gcc 4.7.3 [DragonFly] Release/2013-04-11.
    + A single warning on 'signed overflow'.
    + Harmless iconv(3) warning again (as if we didn't have had to
      treat it specially already).

. UnixWare 7.1.4.
  + Note: it is no longer possible to use the `install' rule -- mk-mk.in
    uses shell functions to ease the task of directory creation etc.
    (especially useful due to VERBOSE=), and that won't work due to bugs.
  + You'll see some harmless and ignorable warnings (the problematic
    looking warning `"openssl.c", line 88: initialization type mismatch'
    refers to a cast from non-const to const, which shouldn't matter).

I'm very interested in reports from other combinations.
(It should work practically everywhere, generally speaking.)

3. Current codebase state
-------------------------

Since i've forked Heirloom mailx(1) (for real) as S-nail(1) on
2012-09-18 i make my way through the codebase, and i'm getting more
and more used to it as time goes by -- of course, i'm thinking object
and thus this codebase and i are antipodes.
The following modules have not yet been looked at and/or have known
design flaws or bugs:

  IMAP, (IMAP-) Caching
  GSS-API (Tarqi Kazan reported with LOG that GSS-API still works)

I'll hope to be able to release S-nail v20 on 2018-03-25, the 40th
anniversary of Mail, as a good one, then.  Also see `TODO'.

In general, S-nail versions before v14.6.4 should not be used.
Furthermore, for now (see below) i mostly care about the core POSIX
mailx(1) functionality, everything else has to wait until some later
time, mostly because the Berkeley codebase and its nail fork have design
flaws in respect to mailbox handling and non-local code jumps (due to
/ and signals). The (MIME capable) NetBSD and OpenBSD forks have instead
addressed this problem, more or less complete, in one or the other way.

For S-nail, v15.0 (not before 2016) is dedicated to a Send- and
MIME-layer rewrite that will bring the possibility to access each
message part individually. Because the Berkeley codebase and its nail
fork have design flaws in respect to mailbox handling and non-local code
jumps (due to / and signals), whereas the (MIME capable) NetBSD and
OpenBSD forks have instead addressed this problem, more or less
complete, in one or the other way, v15.0 will also have to address
signal handling, because only like that we have the possibility to ever
reach a clean state from which we can actually think about re-extending
this MUA. It is not unlikely that IMAP support will be dropped
temporarily, leaving only the plain mailx(1) plus Maildir, SMTP and POP3
functionality. It has to move under the headline reduce to the max.

After this massive change S-nail will hopefully see new features on top
of a straight, object-based, and thus truly extensible interface.
I hope for IMAP, would like to see News, a SQLite-based folder
backend...

vim:set fenc=utf-8:s-ts-mode
