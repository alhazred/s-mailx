#@ `mk-mk.in' -- mk.mk template, completed by mk-conf.sh
#@ Please see `INSTALL' and `make.rc' instead.

OBJ = $(OBJ_SRC:.c=.o)
.SUFFIXES: .o .c .y
.c.o:
	@if [ -z "$(VERBOSE)" ]; then echo '  CC $(<)';\
	else echo '  $$ $(CC) $(CFLAGS) $(INCLUDES) -c $(<)';\
	fi;\
	$(CC) $(CFLAGS) $(INCLUDES) -c $(<)
.c .y: ;

all: _all_echoes $(UAGENT) $(OPTIONAL_PRIVSEP)
_all_echoes:
	@echo 'Building..';\
	if [ -z "$(VERBOSE)" ]; then \
		echo '. CC      : $(CC)';\
		echo '. CFLAGS  : $(CFLAGS)';\
		echo '. INCLUDES: $(INCLUDES)';\
		[ -n "$(LDFLAGS)" ] && echo '. LDFLAGS : $(LDFLAGS)';\
		echo '. LIBS    : $(LIBS)';\
	fi
$(UAGENT): $(OBJ)
	@if [ -z "$(VERBOSE)" ]; then echo '  LINK $(@)';\
	else echo '  $$ $(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)';\
	fi;\
	$(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)
	@if ( command -v size ) > /dev/null 2>&1; then size $(@); fi

$(OBJ): config.h nail.h nailfuns.h $(OBJ_DEP)
config.o accmacvar.o: okeys.h version.h
config.o fio.o: dotlock.h
config.o imap.o pop3.o smtp.o urlcrecry.o: rfc1321.h
config.o imap.o: imap_gssapi.h
config.o lex.o: cmd_tab.h
config.o mime_types.o: mime_types.h
config.o smtp.o: smtp_gssapi.h

$(PRIVSEP): privsep.o
	@if [ -z "$(VERBOSE)" ]; then echo '  LINK $(@)';\
	else echo '  $$ $(CC) $(LDFLAGS) -o $(@) privsep.o';\
	fi;\
	$(CC) $(LDFLAGS) -o $(@) privsep.o
	@if ( command -v size ) > /dev/null 2>&1; then size $(@); fi

privsep.o: config.h nail.h dotlock.h

mime_types.h: mime.types
	@echo '  GEN $(@)';\
	LC_ALL=C < ./mime.types > $(@) $(awk) '\
	function add(mt, ln) {\
		gsub(/[[:space:]]+/, " ", ln);\
		i = split(ln, i_a);\
		e = "";\
		for (j = 1; j <= i; ++j) {\
			k = i_a[j];\
			e = (e ? e " " : "") k\
		}\
		if (e) {\
			if (e_a[mt])\
				e_a[mt] = e_a[mt] " ";\
			e_a[mt] = e_a[mt] e\
		}\
	}\
	/^[[:space:]]*#/ {next}\
	/^[[:space:]]*$$/ {ltype = ""; next}\
	/^[[:space:]]/ {\
		if (!ltype)\
			print "FAULTY CONTINUATION: " $$0 >> "/dev/stderr";\
		add(ltype, $$0);\
		next\
	}\
	/^(@([thH]@)? )?[[:alpha:]]/ {\
		if ($$1 ~ /^@([thH]@)?$$/) {\
			pa = $$1;\
			$$1 = $$2;\
			$$2 = ""\
		} else\
			pa = "";\
		if ($$1 !~ /^([[:alnum:]]+)\/([[:alnum:]_+-]+)$$/)\
			print "FAULTY MIME TYPE: <" $$1 ">" >> "/dev/stderr";\
		ltype = $$1; $$1 = "";\
		if (pa)\
			p_a[ltype] = pa;\
		if (!nt_a[ltype])\
			no_a[++no_ai] = nt_a[ltype] = ltype;\
		add(ltype, $$0)\
	}\
	END {\
		for (z = 1; z <= no_ai; ++z) {\
			t = no_a[z];\
			j = index(t, "/");\
			mt = toupper(substr(t, 1, j - 1));\
			j = substr(t, j + 1);\
			l = length(j);\
			if (!p_a[t])\
				mt = "_MT_" mt;\
			else {\
				tm = p_a[t];\
				if (tm == "@" || tm == "@t@")\
					mt = "_MT_" mt " | _MT_PLAIN";\
				else if (tm == "@h@")\
					mt = "_MT_" mt " | _MT_SOUP_h";\
				else if (tm == "@H@")\
					mt = "_MT_" mt " | _MT_SOUP_H";\
			}\
			print "   {" mt ", " l ", \"" j e_a[t] "\"},"\
		}\
	}\
	'

test: all
	@echo 'Running test, please wait';\
	MAKE=$(MAKE) \
	awk=$(awk) cat=$(cat) cksum=$(cksum) rm=$(rm) sed=$(sed) grep=$(grep) \
	$(SHELL) ./cc-test.sh --check-only ./$(UAGENT)

# Corresponds to same thing in makefile!
_version_from_header = VERSION="`< version.h $(sed) \
		-e '/ VERSION /b X' -e d -e ':X' \
		-e 's/[^\"]*\"v\([^\"]\{1,\}\)\"/\1/'`"

mkman.1: nail.1 mk.mk
	@[ -n "$(VERBOSE)" ] && echo '  GEN $(UAGENT) manual ($(@))';\
	LC_ALL=C _SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
		$(_version_from_header) \
	< ./nail.1 > $(@) $(awk) '\
	BEGIN { written = 0 }\
	/\.\\"--MKMAN-START--/, /\.\\"--MKMAN-END--/ {\
		if (written++ != 0)\
			next;\
		OFS = "";\
		un = toupper(ENVIRON["_UAGENT"]);\
		ln = tolower(un);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print ".ds UU \\\\%", un;\
		print ".ds UA \\\\%", cn;\
		print ".ds ua \\\\%", ln;\
		print ".ds VV \\\\%v", ENVIRON["VERSION"];\
		path = ENVIRON["_SYSCONFRC"];\
		gsub("/", "/\\:", path);\
		print ".ds UR \\\\%", path;\
		OFS = " ";\
		next\
	}\
	{print}\
	'

mkrc.rc: nail.rc mk.mk
	@[ -n "$(VERBOSE)" ] &&\
		echo '  GEN $(UAGENT) default resource file ($(@))';\
	LC_ALL=C _SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
		$(_version_from_header) \
	< ./nail.rc > $(@) $(awk) 'BEGIN {written = 0}\
	/^#--MKRC-START--/, /^#--MKRC-END--/ {\
		if (written == 1)\
			next;\
		written = 1;\
		OFS = "";\
		ln = tolower(ENVIRON["_UAGENT"]);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print "#@ ", ENVIRON["_SYSCONFRC"];\
		print "#@ Configuration file for ", cn, "(1) v",\
			ENVIRON["VERSION"];\
		OFS = " ";\
		next\
	}\
	{print}\
	'

_install_echoes:
	@echo 'Installing..'
install: _install_echoes mk.mk mkman.1 mkrc.rc
	@__mkdir() {\
		_dir=$${1};\
		if [ -d "$${_dir}" ]; then :; else\
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ $(mkdir) -m 0755 -p '$${_dir}'";\
			fi;\
			$(mkdir) -m 0755 -p "$${_dir}";\
		fi;\
	};\
	__copyfile() {\
		_mode=$${1} _src=$${2} _dst=$${3};\
		if [ -n "$(VERBOSE)" ]; then \
			echo "  \$$ $(cp) -f '$${_src}' '$${_dst}'";\
			echo "  \$$ $(chmod) $${_mode} '$${_dst}'";\
		fi;\
		$(cp) -f "$${_src}" "$${_dst}";\
		$(chmod) $${_mode} "$${_dst}";\
	};\
	__copychownfile() {\
		_mode=$${1} _ident=$${2} _src=$${3} _dst=$${4};\
		if [ -n "$(VERBOSE)" ]; then \
			echo "  \$$ $(cp) -f '$${_src}' '$${_dst}'";\
			echo "  \$$ $(chown) $${_ident} '$${_dst}'";\
			echo "  \$$ $(chmod) $${_mode} '$${_dst}'";\
		fi;\
		$(cp) -f "$${_src}" "$${_dst}";\
		$(chown) $${_ident} "$${_dst}";\
		$(chmod) $${_mode} "$${_dst}";\
	};\
	__stripfile() {\
		_file=$${1};\
		if [ "$(WANT_DEBUG)" != 0 ]; then \
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ :WANT_DEBUG=1, not strip(1)ing";\
			fi;\
		elif [ -n "$(HAVE_STRIP)" ]; then \
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ $(STRIP) '$${_file}'";\
			fi;\
			$(strip) "$${_file}";\
		fi;\
	};\
	if [ -n "$(DESTDIR)" ]; then __mkdir "$(DESTDIR)"; fi;\
	__mkdir "$(DESTDIR)$(BINDIR)";\
	__stripfile "$(UAGENT)";\
	__copyfile 0555 "$(UAGENT)" "$(DESTDIR)$(BINDIR)/$(UAGENT)";\
	if [ -n "$(OPTIONAL_PRIVSEP)" ]; then \
		__mkdir "$(DESTDIR)$(LIBEXECDIR)";\
		__stripfile "$(PRIVSEP)";\
		m='o=rx' o=;\
		if [ -n "$(PRIVSEP_GROUP)" ]; then \
			m="g=rxs,$${m}" o=":$(PRIVSEP_GROUP)";\
		else \
			m="g=rx,$${m}";\
		fi;\
		if [ -n "$(PRIVSEP_USER)" ]; then \
			m="u=rxs,$${m}" o="$(PRIVSEP_USER)$${o}";\
		else \
			m="u=rx,$${m}";\
		fi;\
		__copychownfile "$${m}" "$${o}" "$(PRIVSEP)" \
				"$(DESTDIR)$(LIBEXECDIR)/$(PRIVSEP)";\
	fi;\
	__mkdir "$(DESTDIR)$(MANDIR)/man1";\
	__copyfile 0444 ./mkman.1 "$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	__mkdir "$(DESTDIR)$(SYSCONFDIR)";\
	if [ -f "$(DESTDIR)$(SYSCONFRC)" ]; then :; else\
		__copyfile 0444 ./mkrc.rc "$(DESTDIR)$(SYSCONFRC)";\
	fi

uninstall:
	@echo 'Uninstalling..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(rm) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
			"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1"';\
	$(rm) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
		"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	if [ -n "$(OPTIONAL_PRIVSEP)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo \
			  '  $$ $(rm) -f "$(DESTDIR)$(LIBEXECDIR)/$(PRIVSEP)"';\
		$(rm) -f "$(DESTDIR)$(LIBEXECDIR)/$(PRIVSEP)";\
	fi;\
	if [ -n "$(VERBOSE)" ] && [ -f "$(DESTDIR)$(SYSCONFRC)" ]; then \
		echo '  NOTE: not removing "$(DESTDIR)$(SYSCONFRC)"';\
	fi

clean:
	@echo 'Cleaning up..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(rm) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 \
			./mkrc.rc';\
	$(rm) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 ./mkrc.rc;\
	if [ -n "$(OPTIONAL_PRIVSEP)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(rm) -f ./privsep.o $(PRIVSEP)';\
		$(rm) -f ./privsep.o $(PRIVSEP);\
	fi

distclean: clean
	@echo 'Deconfiguring..';\
	[ -n "$(VERBOSE)" ] && echo '  $$ $(rm) -f ./config.* ./*.mk';\
	$(rm) -f ./config.* ./*.mk

# MUST work with "grep=grep sed=sed cmp=cmp mv=mv", otherwise modify makefile
_update-version:
	@LC_ALL=C; export LC_ALL;\
	if [ -z "$(VERSION)" ]; then \
		eval VERSION="`(git describe --tags) 2>/dev/null`";\
		if [ -n "$${VERSION}" ]; then \
			VERSION="`echo $${VERSION} |\
				$(sed) -e 's/^v\{0,1\}\(.*\)/\1/'`";\
			[ "`git status --porcelain |\
				$(awk) '\
					BEGIN {n=0}\
					/version\.h/ {next}\
					/^\?\?/ {next}\
					{++n}\
					END {print n}\
				'`" -ne 0 ] &&\
				VERSION="$${VERSION}-dirty";\
		else \
			$(_version_from_header);\
			echo "$${VERSION}" | $(grep) -q -F dirty ||\
				VERSION="$${VERSION}-dirty";\
		fi;\
	fi;\
	vmaj="`echo \"$${VERSION}\" |\
		$(sed) -e 's/^\([^.]\{1,\}\).*/\1/'`";\
	vmin="`echo \"$${VERSION}\" |\
		$(sed) -e 's/^[^.]\{1,\}\.\([^.]\{1,\}\).*/\1/'`";\
	[ "$${vmin}" = "$${VERSION}" ] && VERSION="$${VERSION}.0" vmin=0;\
	vupd="`echo \"$${VERSION}\" |\
		$(sed) -e 's/^[^.]\{1,\}\.[^.]\{1,\}\.\([^.-]\{1,\}\).*/\1/'`";\
	[ "$${vupd}" = "$${VERSION}" ] && VERSION="$${VERSION}.0" vupd=0;\
	trap "$(rm) ./version.tmp" 0 1 2 15;\
	printf > ./version.tmp "#define VERSION \"v$${VERSION}\"\n";\
	printf >> ./version.tmp "#define VERSION_MAJOR \"$${vmaj}\"\n";\
	printf >> ./version.tmp "#define VERSION_MINOR \"$${vmin}\"\n";\
	printf >> ./version.tmp "#define VERSION_UPDATE \"$${vupd}\"\n";\
	$(cmp) ./version.tmp ./version.h >/dev/null 2>&1 && exit;\
	$(mv) ./version.tmp ./version.h;\
	trap : 0 1 2 15

# s-mk-mode
