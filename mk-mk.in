#@ `mk-mk.in' -- mk.mk template, completed by mk-conf.sh
#@ Please see `INSTALL' and `conf.rc' instead.

OBJ = $(OBJ_SRC:.c=.o)
.SUFFIXES: .o .c .y
.c.o:
	@if [ -z "$(VERBOSE)" ]; then echo '  CC $(<)';\
	else echo '  $$ $(CC) $(CFLAGS) $(INCLUDES) -c $(<)';\
	fi;\
	$(CC) $(CFLAGS) $(INCLUDES) -c $(<)
.c .y: ;

all: _all_echoes $(UAGENT)
_all_echoes:
	@echo 'Building..';\
	if [ -z "$(VERBOSE)" ]; then \
		echo '. CC      : $(CC)';\
		echo '. CFLAGS  : $(CFLAGS)';\
		echo '. INCLUDES: $(INCLUDES)';\
		[ -n "$(LDFLAGS)" ] && echo '. LDFLAGS : $(LDFLAGS)';\
		echo '. LIBS    : $(LIBS)';\
	fi
$(UAGENT): $(OBJ)
	@if [ -z "$(VERBOSE)" ]; then echo '  LINK $(@)';\
	else echo '  $$ $(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)';\
	fi;\
	$(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)

$(OBJ): config.h nail.h extern.h $(OBJ_DEP)
config.o imap.o: imap_gssapi.h
config.o lex.o: cmd_tab.h
config.o main.o: version.h
config.o md5.o imap.o smtp.o auxlily.o pop3.o: md5.h
config.o mime.o: mime_types.h

mime_types.h: mime.types
	@echo '  GEN $(@)';\
	< ./mime.types > $(@) sed -e '/^#/d; /^$$/d; s/^/	"/; s/$$/",/'

test:
	@echo 'Running test, please wait';\
	$(SHELL) ./cc-test.sh --check-only ./$(UAGENT)

mkman.1: nail.1 mk.mk
	@[ -n "$(VERBOSE)" ] && echo '  GEN $(UAGENT) manual ($(@))';\
	_VERSION=`< version.h \
		sed -e 's/^\#define VERSION "\\(.\\{1,\\}\\)"$$/\\1/'` \
	_SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
	< ./nail.1 > $(@) awk 'BEGIN {written = 0}\
	/.\"--MKMAN-START--/, /.\"--MKMAN-END--/ {\
		if (written == 1)\
			next;\
		written = 1;\
		OFS = "";\
		un = toupper(ENVIRON["_UAGENT"]);\
		ln = tolower(un);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print ".ds UU \\\\%", un;\
		print ".ds UA \\\\%", cn;\
		printf ".ds UV \\\\%%%s [%s]\n", cn, ENVIRON["_VERSION"];\
		print ".ds ua \\\\%", ln;\
		print ".ds UR \\\\%", ENVIRON["_SYSCONFRC"];\
		OFS = " ";\
		next\
	}\
	{print}\
	'

mkrc.rc: nail.rc mk.mk
	@[ -n "$(VERBOSE)" ] &&\
		echo '  GEN $(UAGENT) default resource file ($(@))';\
	_SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
	< ./nail.rc > $(@) awk 'BEGIN {written = 0}\
	/#--MKRC-START--/, /#--MKRC-END--/ {\
		if (written == 1)\
			next;\
		written = 1;\
		OFS = "";\
		ln = tolower(ENVIRON["_UAGENT"]);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print "# ", ENVIRON["_SYSCONFRC"];\
		print "# Configuration file for ", cn, "(1)";\
		OFS = " ";\
		next\
	}\
	{print}\
	'

_install_echoes:
	@echo 'Installing..'
install: _install_echoes mk.mk mkman.1 mkrc.rc
	@if [ ! -d "$(DESTDIR)$(BINDIR)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(MKDIR) -p "$(DESTDIR)$(BINDIR)"';\
		$(MKDIR) -p "$(DESTDIR)$(BINDIR)";\
	fi;\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(CP) -f $(UAGENT) \
			"$(DESTDIR)$(BINDIR)/$(UAGENT)"';\
	$(CP) -f $(UAGENT) "$(DESTDIR)$(BINDIR)/$(UAGENT)";\
	if [ -n "$(HAVE_STRIP)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(STRIP) "$(DESTDIR)$(BINDIR)/$(UAGENT)"';\
		$(STRIP) "$(DESTDIR)$(BINDIR)/$(UAGENT)";\
	fi;\
	if [ ! -d "$(DESTDIR)$(MANDIR)/man1" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(MKDIR) -p "$(DESTDIR)$(MANDIR)/man1"';\
		$(MKDIR) -p "$(DESTDIR)$(MANDIR)/man1";\
	fi;\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(CP) -f ./mkman.1 \
			"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1"';\
	$(CP) -f ./mkman.1 "$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	if [ ! -d "$(DESTDIR)$(SYSCONFDIR)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(MKDIR) -p "$(DESTDIR)$(SYSCONFDIR)"';\
		$(MKDIR) -p "$(DESTDIR)$(SYSCONFDIR)";\
	fi;\
	if [ ! -f "$(DESTDIR)$(SYSCONFRC)" ]; then \
		[ -n "$(VERBOSE)" ] &&\
			echo '  $$ $(CP) -f ./mkrc.rc \
				"$(DESTDIR)$(SYSCONFRC)"';\
		$(CP) -f ./mkrc.rc "$(DESTDIR)$(SYSCONFRC)";\
	fi

uninstall:
	@echo 'Uninstalling..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(RM) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
			"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1"';\
	$(RM) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
		"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	[ -n "$(VERBOSE)" ] && [ -f "$(DESTDIR)$(SYSCONFRC)" ] &&\
		echo '  NOTE: not removing "$(DESTDIR)$(SYSCONFRC)"!'

clean:
	@echo 'Cleaning up..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(RM) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 \
			./mkrc.rc';\
	$(RM) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 ./mkrc.rc

distclean: clean
	@echo 'Deconfiguring..';\
	[ -n "$(VERBOSE)" ] && echo '  $$ $(RM) -f ./config.* ./*.mk';\
	$(RM) -f ./config.* ./*.mk

_update-version:
	@if [ -z "$(VERSION)" ]; then \
		eval VERSION="`(git describe --tags) 2>/dev/null`";\
		if [ -z "$${VERSION}" ]; then \
			VERSION="`sed -e 's/[^\"]*\"\([^\"]\{1,\}\)\"/\1/' \
				version.h`";\
			echo "$${VERSION}" | grep -q -F dirty ||\
				VERSION="$${VERSION}-dirty";\
		fi;\
	fi;\
	trap "$(RM) ./version.tmp" 0 1 2 15;\
	printf > ./version.tmp "#define VERSION \"$${VERSION}\"\n";\
	$(CMP) ./version.tmp ./version.h >/dev/null 2>&1 && exit;\
	mv ./version.tmp ./version.h;\
	trap - 0 1 2 15

_update-release:
	if [ "`git rev-parse --verify HEAD`" != \
			"`git rev-parse --verify master`" ]; then \
		echo >&2 'Not on the [master] branch';\
		exit 1;\
	fi;\
	echo 'Name of release tag:';\
	read REL;\
	echo "Is $(UAGENT) <v$${REL}> correct?  ENTER continues";\
	read i;\
	FREL=`echo $${REL} | sed -e 's/\./_/g'` &&\
	$(MAKE) -f ./mk.mk _update-version &&\
	git add version.h &&\
	git commit -m "Bump $(UAGENT) v$${REL}" &&\
	git tag -f "v$${REL}" &&\
	$(MAKE) -f ./mk.mk _update-version &&\
	git add version.h && git commit --amend &&\
	git tag -f "v$${REL}" &&\
	git archive --prefix="$(UAGENT)-$${REL}/" \
		-o "$${TMPDIR}/$(UAGENT)-$${FREL}.tar.gz" HEAD &&\
	cd "$${TMPDIR}" &&\
	tar -x -z -f "$(UAGENT)-$${FREL}.tar.gz" &&\
	$(RM) -f "$(UAGENT)-$${FREL}.tar.gz" &&\
	tar -c -z -f "$(UAGENT)-$${FREL}.tar.gz" "$(UAGENT)-$${REL}" &&\
	openssl md5 "$(UAGENT)-$${FREL}.tar.gz" > \
		"$(UAGENT)-$${FREL}.cksum" 2>&1 &&\
	openssl sha1 "$(UAGENT)-$${FREL}.tar.gz" >> \
		"$(UAGENT)-$${FREL}.cksum" 2>&1 &&\
	openssl sha256 "$(UAGENT)-$${FREL}.tar.gz" >> \
		"$(UAGENT)-$${FREL}.cksum" 2>&1 &&\
	echo "-put $(UAGENT)-$${FREL}.tar.gz" | \
	sftp -b - sdaoden@frs.sourceforge.net:/home/frs/project/s-nail &&\
	echo 'All seems fine';\
	echo 'Really send announcement mail?  ENTER continues';\
	read i;\
	cd "$(UAGENT)-$${REL}" &&\
	make devel &&\
	./s-nail -A sdn_sf -s "[ANNOUNCE] of S-nail v$${REL}" nail-announce &&\
	cd .. &&\
	echo "Really remove $(UAGENT)-$${REL} build dir?  ENTER continues";\
	read i;\
	$(RM) -rf "$(UAGENT)-$${REL}" &&\
	echo 'Uff.'

# vim:set fenc=utf-8 ft=make:
