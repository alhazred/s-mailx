#@ `mk-mk.in' -- mk.mk template, completed by mk-conf.sh
#@ Please see `INSTALL' and `conf.rc' instead.

OBJ = $(OBJ_SRC:.c=.o)
.SUFFIXES: .o .c .y
.c.o:
	@if [ -z "$(VERBOSE)" ]; then echo '  CC $(<)';\
	else echo '  $$ $(CC) $(CFLAGS) $(INCLUDES) -c $(<)';\
	fi;\
	$(CC) $(CFLAGS) $(INCLUDES) -c $(<)
.c .y: ;

all: _all_echoes $(UAGENT)
_all_echoes:
	@echo 'Building..';\
	if [ -z "$(VERBOSE)" ]; then \
		echo '. CC      : $(CC)';\
		echo '. CFLAGS  : $(CFLAGS)';\
		echo '. INCLUDES: $(INCLUDES)';\
		[ -n "$(LDFLAGS)" ] && echo '. LDFLAGS : $(LDFLAGS)';\
		echo '. LIBS    : $(LIBS)';\
	fi
$(UAGENT): $(OBJ)
	@if [ -z "$(VERBOSE)" ]; then echo '  LINK $(@)';\
	else echo '  $$ $(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)';\
	fi;\
	$(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)

$(OBJ): config.h nail.h nailfuns.h $(OBJ_DEP)
config.o accmacvar.o: okeys.h
config.o imap.o pop3.o smtp.o urlcrecry.o: rfc1321.h
config.o imap.o: imap_gssapi.h
config.o lex.o: cmd_tab.h
config.o main.o: version.h
config.o mime.o: mime_types.h
config.o smtp.o: smtp_gssapi.h

mime_types.h: mime.types
	@echo '  GEN $(@)';\
	< ./mime.types > $(@) $(SED) -e '/^#/d; /^$$/d; s/^/	"/; s/$$/",/'

test:
	@echo 'Running test, please wait';\
	$(SHELL) ./cc-test.sh --check-only ./$(UAGENT)

mkman.1: nail.1 mk.mk
	@[ -n "$(VERBOSE)" ] && echo '  GEN $(UAGENT) manual ($(@))';\
	_VERSION=`< version.h \
		$(SED) -e 's/^\#define VERSION "\\(.\\{1,\\}\\)"$$/\\1/'` \
	_SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
	< ./nail.1 > $(@) $(AWK) 'BEGIN {written = 0}\
	/.\"--MKMAN-START--/, /.\"--MKMAN-END--/ {\
		if (written == 1)\
			next;\
		written = 1;\
		OFS = "";\
		un = toupper(ENVIRON["_UAGENT"]);\
		ln = tolower(un);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print ".ds UU \\\\%", un;\
		print ".ds UA \\\\%", cn;\
		printf ".ds UV \\\\%%%s [%s]\n", cn, ENVIRON["_VERSION"];\
		print ".ds ua \\\\%", ln;\
		print ".ds UR \\\\%", ENVIRON["_SYSCONFRC"];\
		OFS = " ";\
		next\
	}\
	{print}\
	'

mkrc.rc: nail.rc mk.mk
	@[ -n "$(VERBOSE)" ] &&\
		echo '  GEN $(UAGENT) default resource file ($(@))';\
	_SYSCONFRC="$(SYSCONFRC)" _UAGENT="$(UAGENT)" \
	< ./nail.rc > $(@) $(AWK) 'BEGIN {written = 0}\
	/^#--MKRC-START--/, /^#--MKRC-END--/ {\
		if (written == 1)\
			next;\
		written = 1;\
		OFS = "";\
		ln = tolower(ENVIRON["_UAGENT"]);\
		cn = toupper(substr(ln, 1, 1)) substr(ln, 2);\
		print "# ", ENVIRON["_SYSCONFRC"];\
		print "# Configuration file for ", cn, "(1)";\
		OFS = " ";\
		next\
	}\
	/^# vim:/ {next}\
	{print}\
	'

_install_echoes:
	@echo 'Installing..'
install: _install_echoes mk.mk mkman.1 mkrc.rc
	@__mkdir() {\
		_dir=$${1};\
		if [ ! -d "$${_dir}" ]; then \
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ $(MKDIR) -m 0755 -p '$${_dir}'";\
			fi;\
			$(MKDIR) -m 0755 -p "$${_dir}";\
		fi;\
	};\
	__copyfile() {\
		_mode=$${1} _src=$${2} _dst=$${3};\
		if [ -n "$(VERBOSE)" ]; then \
			echo "  \$$ $(CP) -f '$${_src}' '$${_dst}'";\
			echo "  \$$ $(CHMOD) $${_mode} '$${_dst}'";\
		fi;\
		$(CP) -f "$${_src}" "$${_dst}";\
		$(CHMOD) $${_mode} "$${_dst}";\
	};\
	__stripfile() {\
		_file=$${1};\
		if [ "$(WANT_DEBUG)" != 0 ]; then \
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ :WANT_DEBUG=1, not strip(1)ing";\
			fi;\
		elif [ -n "$(HAVE_STRIP)" ]; then \
			if [ -n "$(VERBOSE)" ]; then \
				echo "  \$$ $(STRIP) '$${_file}'";\
			fi;\
			$(STRIP) "$${_file}";\
		fi;\
	};\
	if [ -n "$(DESTDIR)" ]; then __mkdir "$(DESTDIR)"; fi;\
	__mkdir "$(DESTDIR)$(BINDIR)";\
	__copyfile 0755 "$(UAGENT)" "$(DESTDIR)$(BINDIR)/$(UAGENT)";\
	__stripfile "$(DESTDIR)$(BINDIR)/$(UAGENT)";\
	__mkdir "$(DESTDIR)$(MANDIR)/man1";\
	__copyfile 0644 ./mkman.1 "$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	__mkdir "$(DESTDIR)$(SYSCONFDIR)";\
	if [ ! -f "$(DESTDIR)$(SYSCONFRC)" ]; then \
		__copyfile 0644 ./mkrc.rc "$(DESTDIR)$(SYSCONFRC)";\
	fi

uninstall:
	@echo 'Uninstalling..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(RM) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
			"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1"';\
	$(RM) -f "$(DESTDIR)$(BINDIR)/$(UAGENT)" \
		"$(DESTDIR)$(MANDIR)/man1/$(UAGENT).1";\
	if [ -n "$(VERBOSE)" ] && [ -f "$(DESTDIR)$(SYSCONFRC)" ]; then \
		echo '  NOTE: not removing "$(DESTDIR)$(SYSCONFRC)"';\
	fi

clean:
	@echo 'Cleaning up..';\
	[ -n "$(VERBOSE)" ] &&\
		echo '  $$ $(RM) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 \
			./mkrc.rc';\
	$(RM) -f $(OBJ) $(UAGENT) ./mime_types.h ./mkman.1 ./mkrc.rc

distclean: clean
	@echo 'Deconfiguring..';\
	[ -n "$(VERBOSE)" ] && echo '  $$ $(RM) -f ./config.* ./*.mk';\
	$(RM) -f ./config.* ./*.mk

_update-version:
	@if [ -z "$(VERSION)" ]; then \
		eval VERSION="`(git describe --tags) 2>/dev/null`";\
		if [ -z "$${VERSION}" ]; then \
			VERSION="`$(SED) -e 's/[^\"]*\"\([^\"]\{1,\}\)\"/\1/' \
				version.h`";\
			echo "$${VERSION}" | $(GREP) -q -F dirty ||\
				VERSION="$${VERSION}-dirty";\
		fi;\
	fi;\
	trap "$(RM) ./version.tmp" 0 1 2 15;\
	printf > ./version.tmp "#define VERSION \"$${VERSION}\"\n";\
	$(CMP) ./version.tmp ./version.h >/dev/null 2>&1 && exit;\
	mv ./version.tmp ./version.h;\
	trap - 0 1 2 15

# vim:set fenc=utf-8 ft=make:
