#@ make-config.in -- mk-config.mk template, completed by make-config.sh.
#@ TODO All the shell/awk snippets should become scripts in mk/!

.PHONY: all test install uninstall clean distclean

SIZE_CHECK = @if ( command -v size ) > /dev/null 2>&1; then size $(@); fi

_version_from_header = VERSION="`< $(CWDDIR)include/mx/gen-version.h $(sed) \
		-e '/ n_VERSION /b X' -e d -e ':X' \
		-e 's/[^\"]*\"v\([^\"]\{1,\}\)\"/\1/'`"

all: $(VAL_UAGENT) $(OPTIONAL_PS_DOTLOCK)

$(VAL_UAGENT): $(OBJ) uman.1 urc.rc
	$(ECHO_LINK)$(CC) $(LDFLAGS) -o $(@) $(OBJ) $(LIBS)
	$(SIZE_CHECK)

$(VAL_PS_DOTLOCK): $(PS_DOTLOCK_C_OBJ)
	$(ECHO_LINK)$(CC) $(PS_DOTLOCK_LDFLAGS) -o $(@) $(PS_DOTLOCK_C_OBJ) \
		$(PS_DOTLOCK_LIBS)
	$(SIZE_CHECK)

gen-mime-types.h: $(TOPDIR)mime.types
	$(ECHO_GEN) < $(TOPDIR)mime.types > $(@) \
	awk=$(awk) $(SHELL) $(TOPDIR)mk/make-mime-types.sh

uman.1: $(TOPDIR)nail.1
	$(ECHO_GEN)$(_version_from_header) \
		$(SHELL) "$(TOPDIR)"mk/make-man.sh "$(TOPDIR)"nail.1 "$(@)"

urc.rc: $(TOPDIR)nail.rc
	$(ECHO_GEN)$(_version_from_header) \
		$(SHELL) "$(TOPDIR)"mk/make-rc.sh "$(TOPDIR)"nail.rc "$(@)"

install:
	$(ECHO_BLOCK_BEGIN)\
	__mkdir() {\
		_dir="$(DESTDIR)$${1}";\
		if [ -d "$${_dir}" ]; then :; else \
			$(ECHO_BLOCK_CMD)$(mkdir) -m 0755 -p "$${_dir}";\
		fi;\
	};\
	__copyfile() {\
		_mode=$${1} _src=$${2} _xdst=$${3} _dst="$(DESTDIR)$${3}";\
		echo "rm -f \"\$${DESTDIR}$${_xdst}\"" >> \
			"$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
		$(ECHO_BLOCK_CMD)$(cp) -f "$${_src}" "$${_dst}";\
		$(ECHO_BLOCK_CMD)$(chmod) $${_mode} "$${_dst}";\
	};\
	__copychownfile() {\
		_mode=$${1} _ident=$${2} _src=$${3} \
			_xdst=$${4} _dst="$(DESTDIR)$${4}";\
		echo "rm -f \"\$${DESTDIR}$${_xdst}\"" >> \
			"$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
		$(ECHO_BLOCK_CMD)$(cp) -f "$${_src}" "$${_dst}";\
		$(ECHO_BLOCK_CMD)$(chown) $${_ident} "$${_dst}" || true;\
		$(ECHO_BLOCK_CMD)$(chmod) $${_mode} "$${_dst}";\
		\
	};\
	__stripfile() {\
		_file=$${1};\
		if [ "$(OPT_DEBUG)" != 0 ]; then :;\
		elif [ -n "$(HAVE_STRIP)" ]; then \
			$(ECHO_BLOCK_CMD)$(strip) "$${_file}";\
		fi;\
	};\
	\
	cd "$(CWDDIR)" || exit 11;\
	echo '#!/bin/sh -' > "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	echo '#@ Uninstall script for $(VAL_UAGENT)' >> \
		"$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	echo >> "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	echo 'DESTDIR="$(DESTDIR)"' >> "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	echo 'DESTDIR=' >> "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	echo >> "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	\
	if [ -n "$(DESTDIR)" ]; then __mkdir ''; fi;\
	__mkdir "$(VAL_BINDIR)";\
	__mkdir "$(VAL_MANDIR)/man1";\
	__mkdir "$(VAL_SYSCONFDIR)";\
	\
	__stripfile "$(OBJDIR)"/"$(VAL_UAGENT)";\
	__copyfile 0555 "$(OBJDIR)"/"$(VAL_UAGENT)" \
		"$(VAL_BINDIR)/$(VAL_UAGENT)";\
	__copyfile 0444 "$(OBJDIR)"/uman.1 \
		"$(VAL_MANDIR)/man1/$(VAL_UAGENT).1";\
	if [ -f "$(DESTDIR)$(VAL_SYSCONFDIR)/$(VAL_SYSCONFRC)" ]; then :;else \
		__copyfile 0444 "$(OBJDIR)"/urc.rc \
			"$(VAL_SYSCONFDIR)/$(VAL_SYSCONFRC)";\
	fi;\
	\
	if [ -n "$(OPTIONAL_PS_DOTLOCK)" ]; then \
		__mkdir "$(VAL_LIBEXECDIR)";\
		\
		__stripfile "$(OBJDIR)"/"$(VAL_PS_DOTLOCK)";\
		m='o=rx' o=;\
		if [ -n "$(_____PRIVSEP_GROUP)" ]; then \
			m="g=rxs,$${m}" o=":$(VAL_PRIVSEP_GROUP)";\
		else \
			m="g=rx,$${m}";\
		fi;\
		if [ -n "$(VAL_PS_DOTLOCK_USER)" ]; then \
			m="u=rxs,$${m}" o="$(VAL_PS_DOTLOCK_USER)$${o}";\
		else \
			m="u=rx,$${m}";\
		fi;\
		__copychownfile "$${m}" "$${o}" \
			"$(OBJDIR)"/"$(VAL_PS_DOTLOCK)" \
			"$(VAL_LIBEXECDIR)/$(VAL_PS_DOTLOCK)";\
	fi;\
	\
	if [ -z "$(DESTDIR)" ]; then \
		__copyfile 0555 "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh" \
			"$(VAL_BINDIR)/$(VAL_UAGENT)-uninstall.sh";\
	else \
	echo "rm -f \"\$${DESTDIR}$(VAL_BINDIR)/$(VAL_UAGENT)-uninstall.sh\"" \
			>> "$(OBJDIR)/$(VAL_UAGENT)-uninstall.sh";\
	fi;\
	$(ECHO_BLOCK_END)

uninstall:
	@echo 'Invoke $(VAL_UAGENT)-uninstall.sh to uninstall $(VAL_UAGENT)'

clean:
	$(ECHO_CMD)\
	$(rm) -f $(OBJ) "$(VAL_UAGENT)" ./gen-mime-types.h ./uman.1 ./urc.rc;\
	\
	if [ -n "$(OPTIONAL_PS_DOTLOCK)" ]; then \
		$(rm) -f $(PS_DOTLOCK_C_OBJ) "$(VAL_PS_DOTLOCK)";\
	fi

distclean: clean
	$(ECHO_CMD)\
	${rm} -f mk-*;\
	cd .. && $(rm) -r "$(OBJDIR)";\
	if [ -f "$(CWDDIR)include/mx/config.h" ]; then \
		$(rm) -f "$(CWDDIR)include/mx/config.h" \
			"$(CWDDIR)include/mx/gen-config.h";\
	fi

# MUST work with "TOPDIR= grep=grep sed=sed cmp=cmp mv=mv",
# otherwise make-release.sh needs to be changed
_echo-version:
	@LC_ALL=C; export LC_ALL; $(_version_from_header); echo "$${VERSION}"
_update-version:
	@LC_ALL=C; export LC_ALL;\
	if [ -z "$(VERSION)" ]; then \
		eval VERSION="`([ -n \"$(TOPDIR)\" ] && cd \"$(TOPDIR)\";\
			[ -d .git ] && git describe --tags) 2>/dev/null`";\
		if [ -n "$${VERSION}" ]; then \
			VERSION="`echo $${VERSION} |\
				$(sed) -e 's/^v\{0,1\}\(.*\)/\1/'`";\
			[ "`([ -n \"$(TOPDIR)\" ] && cd \"$(TOPDIR)\";\
					git status --porcelain) |\
				$(awk) '\
					BEGIN {n=0}\
					/gen-version\.h/ {next}\
					/^\?\?/ {next}\
					{++n}\
					END {print n}\
				'`" -ne 0 ] &&\
				VERSION="$${VERSION}-dirty";\
		else \
			$(_version_from_header);\
			echo "$${VERSION}" | $(grep) -q -F dirty ||\
				VERSION="$${VERSION}-dirty";\
		fi;\
	fi;\
	vmaj="`echo \"$${VERSION}\" |\
		$(sed) -e 's/^\([^.]\{1,\}\).*/\1/'`";\
	vmin="`echo \"$${VERSION}\" |\
		$(sed) -e 's/^[^.]\{1,\}\.\([^.]\{1,\}\).*/\1/'`";\
	[ "$${vmin}" = "$${VERSION}" ] && VERSION="$${VERSION}.0" vmin=0;\
	vupd="`echo \"$${VERSION}\" |\
		$(sed) -e \
			's/^[^.]\{1,\}\.[^.]\{1,\}\.\([^.-]\{1,\}\).*/\1/'`";\
	[ "$${vupd}" = "$${VERSION}" ] && VERSION="$${VERSION}.0" vupd=0;\
	trap "$(rm) -f ./version.tmp" 0 1 2 15;\
	printf > ./version.tmp "#define n_VERSION \"v$${VERSION}\"\n";\
	printf >> ./version.tmp \
		"#define n_VERSION_DATE \"`date -u +'%Y-%m-%d'`\"\n";\
	printf >> ./version.tmp "#define n_VERSION_MAJOR \"$${vmaj}\"\n";\
	printf >> ./version.tmp "#define n_VERSION_MINOR \"$${vmin}\"\n";\
	printf >> ./version.tmp "#define n_VERSION_UPDATE \"$${vupd}\"\n";\
	printf >> ./version.tmp \
		"#define n_VERSION_HEXNUM \"0x%02X%03X%03X\"\n" \
		"$${vmaj}" "$${vmin}" "$${vupd}";\
	$(cmp) ./version.tmp $(CWDDIR)include/mx/gen-version.h \
		>/dev/null 2>&1 && exit;\
	$(mv) ./version.tmp $(CWDDIR)include/mx/gen-version.h;\
	trap : 0 1 2 15

# s-mk-mode
